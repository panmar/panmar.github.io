<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Marcin Panasiuk - projects</title><link href="https://marcinpanasiuk.com/" rel="alternate"></link><link href="https://marcinpanasiuk.com/feeds/projects.atom.xml" rel="self"></link><id>https://marcinpanasiuk.com/</id><updated>2024-02-17T12:15:00+01:00</updated><entry><title>Code me if you can - part 2</title><link href="https://marcinpanasiuk.com/code-me-if-you-can-part-2.html" rel="alternate"></link><published>2024-02-17T12:15:00+01:00</published><updated>2024-02-17T12:15:00+01:00</updated><author><name>Marcin Panasiuk</name></author><id>tag:marcinpanasiuk.com,2024-02-17:/code-me-if-you-can-part-2.html</id><summary type="html">&lt;img alt="Winter forest" class="align-center" src="/images/winter.jpg" /&gt;
&lt;p&gt;The second portion of fun projects to implement during cold, winter nights.
The first part can be found &lt;a class="reference external" href="https://marcinpanasiuk.com/code-me-if-you-can.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;CHIP-8 emulator&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;really good place to start when embarking on the emulator journey&lt;/li&gt;
&lt;li&gt;only ~40 simple instructions to implement&lt;/li&gt;
&lt;li&gt;well documented &lt;a class="reference external" href="http://devernay.free.fr/hacks/chip8/C8TECH10.HTM"&gt;design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;easily defined graphics (you can quickly visualize the progress …&lt;/li&gt;&lt;/ul&gt;&lt;/dd&gt;&lt;/dl&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;img alt="Winter forest" class="align-center" src="/images/winter.jpg" /&gt;
&lt;p&gt;The second portion of fun projects to implement during cold, winter nights.
The first part can be found &lt;a class="reference external" href="https://marcinpanasiuk.com/code-me-if-you-can.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;CHIP-8 emulator&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;really good place to start when embarking on the emulator journey&lt;/li&gt;
&lt;li&gt;only ~40 simple instructions to implement&lt;/li&gt;
&lt;li&gt;well documented &lt;a class="reference external" href="http://devernay.free.fr/hacks/chip8/C8TECH10.HTM"&gt;design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;easily defined graphics (you can quickly visualize the progress!)&lt;/li&gt;
&lt;li&gt;lots of &lt;a class="reference external" href="https://johnearnest.github.io/chip8Archive"&gt;games&lt;/a&gt; to test on&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Micromouse agent&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;inspired by &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Micromouse"&gt;micromouse competition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;write an agent to navigate a robot through a undiscovered maze&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Voxel engine&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;inspired by Teardown&lt;/li&gt;
&lt;li&gt;use onlu cubes&lt;/li&gt;
&lt;li&gt;use only procedural textures&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Online ascii editor&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;write an online ascii char editor similar to &lt;a class="reference external" href="https://asciiflow.com"&gt;asciiflow&lt;/a&gt;, but much more intuitive&lt;/li&gt;
&lt;li&gt;use webassembly&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Train a deep learning network how to play a 2d racing game&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;generate random cyclick track&lt;/li&gt;
&lt;li&gt;implement simple 2d driving model&lt;/li&gt;
&lt;li&gt;implement simple 2d sensor model&lt;/li&gt;
&lt;li&gt;use deep learning to find quickest agent to complete the track&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Distributed data store&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;implement &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Content-addressable_storage"&gt;CAS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Create a custom programming language&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;design a simple programming language&lt;/li&gt;
&lt;li&gt;implement a lexer&lt;/li&gt;
&lt;li&gt;implement a recursive-descent parser&lt;/li&gt;
&lt;li&gt;implement a LLVM backend&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content><category term="misc"></category><category term="projects"></category></entry><entry><title>Code me if you can</title><link href="https://marcinpanasiuk.com/code-me-if-you-can.html" rel="alternate"></link><published>2023-11-19T22:02:00+01:00</published><updated>2023-11-19T22:02:00+01:00</updated><author><name>Marcin Panasiuk</name></author><id>tag:marcinpanasiuk.com,2023-11-19:/code-me-if-you-can.html</id><summary type="html">&lt;img alt="Autumn forest" class="align-center" src="/images/autumn.jpg" /&gt;
&lt;p&gt;Some time ago, I started writing down ideas I could implement for fun. Here are a few projects to spend those long, autumn nights on:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;write a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Hack_computer"&gt;Hack computer&lt;/a&gt; emulator&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;inspired by a book &lt;a class="reference external" href="https://www.amazon.com/Elements-Computing-Systems-Building-Principles/dp/0262640686"&gt;The Elements of Computing Systems: Building a Modern Computer from First Principles&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;start from NAND gate …&lt;/li&gt;&lt;/ul&gt;&lt;/dd&gt;&lt;/dl&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;img alt="Autumn forest" class="align-center" src="/images/autumn.jpg" /&gt;
&lt;p&gt;Some time ago, I started writing down ideas I could implement for fun. Here are a few projects to spend those long, autumn nights on:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;write a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Hack_computer"&gt;Hack computer&lt;/a&gt; emulator&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;inspired by a book &lt;a class="reference external" href="https://www.amazon.com/Elements-Computing-Systems-Building-Principles/dp/0262640686"&gt;The Elements of Computing Systems: Building a Modern Computer from First Principles&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;start from NAND gate&lt;/li&gt;
&lt;li&gt;end with a Pong running on the system&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;solve a maze by pouring liquid&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;implement simple 2d liquid physics&lt;/li&gt;
&lt;li&gt;optimize, optimize, optimize&lt;/li&gt;
&lt;li&gt;make simulation look nice&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;implement an ultraprivate chat webapp&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;use end to end encryption&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;implement a chess agent using less than 1024 tokens and maximum 256 MB of memory&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;inspired by &lt;a class="reference external" href="https://www.youtube.com/watch?v=iScy18pVR58"&gt;Sebastian Lague challange&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;write a few agents and let them play&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;implement a simple dlna server serving movies to TV&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;reverse-engineer existing solutions using wireshark&lt;/li&gt;
&lt;li&gt;use as little documentation as possible&lt;/li&gt;
&lt;li&gt;try not to read any source code&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;write a raytracer using DXR&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;inspired by &lt;a class="reference external" href="https://raytracing.github.io"&gt;Ray Tracing in One Weekend&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;implement malloc&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;compare it with other popular implementations&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content><category term="misc"></category><category term="projects"></category></entry></feed>